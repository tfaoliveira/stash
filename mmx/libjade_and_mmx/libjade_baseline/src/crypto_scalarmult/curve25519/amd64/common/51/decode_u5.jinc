inline fn __decode_u_coordinate5(reg u64[4] t) -> reg u64[5]
{
  reg u64[5] u;
  reg u64 mask;

  mask = 0x7ffffffffffff;
  
  //u[0] = t[0] & mask; // 51; 13 left
  u[0] = t[0];
  u[0] &= mask;
  
  //u[1] = (t[1] << 13) || (t[0] >> 51) & mask; // 38; 26 left
  u[1] = t[1];
  u[1] <<= 13;
  t[0] >>= 51;
  u[1] |= t[0];
  u[1] &= mask;
  
  //u[2] = (t[2] << 26) || (t[1] >> 38) & mask; // 25; 39 left
  u[2] = t[2];
  u[2] <<= 26;
  t[1] >>= 38;
  u[2] |= t[1];
  u[2] &= mask;
  
  //u[3] = (t[3] << 39) || (t[2] >> 25) & mask; // 12; '52' left
  u[3] = t[3];
  u[3] <<= 39;
  t[2] >>= 25;
  u[3] |= t[2];
  u[3] &= mask;
  
  //u[4] = (t[3] >> 12) & mask;
  u[4] = t[3];
  u[4] >>= 12;
  u[4] &= mask;

  return u;
}

inline fn __decode_u_coordinate_base5() -> reg u64[5]
{
  reg u64[5] u;

  u[0] = 9;
  u[1] = 0;
  u[2] = 0;
  u[3] = 0;
  u[4] = 0;

  return u;
}

